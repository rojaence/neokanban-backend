generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Action {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?
  ProfileOption ProfileOption[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Module {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  uri         String   @default("")
  Option      Option[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Option {
  name          String          @unique
  description   String?
  moduleId      Int
  id            Int             @id @default(autoincrement())
  iconName      String?
  uri           String          @default("")
  Module        Module          @relation(fields: [moduleId], references: [id])
  ProfileOption ProfileOption[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?
  ProfileOption ProfileOption[]
  UserProfile   UserProfile[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProfileOption {
  profileId Int
  actionId  Int
  id        Int     @id @default(autoincrement())
  optionId  Int
  Action    Action  @relation(fields: [actionId], references: [id])
  Option    Option  @relation(fields: [optionId], references: [id])
  Profile   Profile @relation(fields: [profileId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  userId      Int
  User        User    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  surname     String
  email       String        @unique
  password    String
  username    String        @unique
  Task        Task[]
  UserProfile UserProfile[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserProfile {
  userId    Int
  profileId Int
  Profile   Profile @relation(fields: [profileId], references: [id])
  User      User    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, profileId])
}
